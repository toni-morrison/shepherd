# import Appointment from './generated/prisma.graphql'
# import Instruction from './generated/prisma.graphql'
# import Sitter from './generated/prisma.graphql'
# import SitterRate from './generated/prisma.graphql'
# import TimeInterval from './generated/prisma.graphql'
# import TodoList from './generated/prisma.graphql'
# import User from './generated/prisma.graphql'

type Query {
  findSitters(
    day: String!
    start: Int!
    end: Int!
    baby: Boolean!
    pet: Boolean!
    home: Boolean!
  ): [TimeInterval!]!
  findTodoLists(email: String!): [TodoList!]!
  findInstructions(id: ID!): [Instruction!]!
  getUserInfo(email: String!): User!
  getSitterSchedule(id: String!): [TimeInterval!]!
  reviewModal(email: String!): [TimeInterval!]!
}

type Mutation {
  signup(
    email: String!
    first_name: String!
    last_name: String!
    street_address: String
    city: String
    state: String
    zip_code: String
    rating: Int
    pic_url: String
  ): User!
  createSitter(
    email: String!
    bio: String!
    child_rate: Float
    child_addl: Float
    pet_rate: Float
    pet_addl: Float
    home_rate: Float
  ): Sitter!
  createSchedule(id: ID!, day: String!, start: Int!, end: Int!): TimeInterval!
  createList(
    email: String!
    name: String!
    startTime: String!
    endTime: String!
  ): TodoList!
  updateListName(
    id: ID!
    name: String
    startTime: String
    endTime: String
  ): TodoList!
  createInstruction(
    id: ID!
    time: String!
    desc: String!
    list_id: ID!
  ): Instruction!
  deleteInstructions(id: ID!): BatchPayload!
  deleteTodo(id: ID!): TodoList!
  # deleteTodoList(id: ID!): Todolist!

  updateUser(
    email: String!
    first_name: String
    last_name: String
    street_address: String
    city: String
    state: String
    zip_code: String
    pic_url: String
  ): User!

  updateSitter(
    id: ID!
    bio: String
    rating: Float
    child_rate: Float
    child_addl: Float
    pet_rate: Float
    pet_addl: Float
    home_rate: Float
  ): Sitter!

  updateAppointment(
    id: ID!
    todoList: ID
    pending: Boolean
    userRating: Float
    sitterRating: Float
    userReview: String
    sitterReview: String
  ): Appointment!
  updateSchedule(
    start: Float
    end: Float
    day: String
    id: String
  ): BatchPayload!
}
